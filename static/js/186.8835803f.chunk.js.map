{"version":3,"file":"static/js/186.8835803f.chunk.js","mappings":"wQAKe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAiBH,GAFxC,OAEUI,EAFV,OAGIP,EAAUO,GACVL,GAAa,GAJjB,gDAMIM,QAAQC,IAAI,uBAAZ,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACP,IAEAF,GACK,SAAC,IAAD,KAIP,wBACGF,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADC,KAQjB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from '../../Services/getApi';\nimport Loader from '../Loader/Loader';\n\nexport default function Reviews() {\n  const [review, setReview] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const data = await getMoviesReviews(movieId);\n        setReview(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <ul>\n      {review.map(({ author, content, id }) => (\n        <li key={id}>\n          <h2>{author}</h2>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":["Reviews","useState","review","setReview","isLoading","setIsLoading","movieId","useParams","useEffect","getMoviesReviews","data","console","log","fetchReviews","map","author","content","id"],"sourceRoot":""}